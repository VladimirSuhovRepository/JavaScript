////////////////////// SORTED ARRAY //////////////////////////////////////////
class SortedArray {
  constructor(compare){
  	this.compare = compare
  	this.content = []
  }  
  
   findPos(elt) {
   		return this.content.findIndex(x => this.compare(elt, x) < 0);
	}
  
   insert(elt) {
  		this.content.splice(this.findPos(elt), 0, elt)
	}
}

var sorted = new SortedArray(function(a, b) { return a - b })
sorted.insert(5)
sorted.insert(1)
sorted.insert(2)
sorted.insert(4)
sorted.insert(3)
console.log("array:", sorted.content)

////////////////////// OBJECT PROPERTIES //////////////////////////////////////////
function startNode(type, value, options) {
  let res = {type: type, value: value}
  Object.defineProperty(res, options.sourceProperty, {value: options.sourceValue,  writable: false})  
  return res;
}

console.log(startNode("Identifier", "foo", {
  sourceProperty: "src",
  sourceValue: "bar.js"
}))
// → {type: "Identifier",
//    value: "foo",
//    src: "bar.js"}

////////////////////// FUNCTION CONSTRUCTOR //////////////////////////////////////////
function Point(a, b) {
	this.a = a;
  	this.b = b;
  
  	this.plus = function (point) {
    	var self = this;
      	self.a = self.a + point.a;
      	self.b = self.b + point.b;
      return this;
    }
}

console.log(new Point(1, 2).plus(new Point(2, 1)))
// → Point{x: 3, y: 3}


////////////////////// CLASS //////////////////////////////////////////
class Speaker {  
  constructor(name, verb){
    this.name = name
    this.verb = verb || "says"
  }  
  
  speak(text){
  	console.log(this.name + " " + this.verb + " '" + text + "'")
  }
}

class Shouter extends Speaker {
  constructor(name){
    super(name)
  } 
  
  speak(text){
  	super.speak(text.toUpperCase());
  }
}


new Shouter("Dr. Loudmouth").speak("hello there")

////////////////////// PROTOTYPE //////////////////////////////////////////
function Speaker(name, verb) {
  this.name = name
  this.verb = verb || "says"
}
Speaker.prototype.speak = function(text) {
  console.log(this.name + " " + this.verb + " '" + text + "'")
}

function Shouter(name) {
  Speaker.call(this, name, "shouts")
}
Shouter.prototype = Object.create(Speaker.prototype)
Shouter.prototype.speak = function(text) {
  Speaker.prototype.speak.call(this, text.toUpperCase())
}

new Shouter("Dr. Loudmouth").speak("hello there")

