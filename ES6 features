////////////////////// FUNCTION CONSTRUCTOR //////////////////////////////////////////
function Point(a, b) {
	this.a = a;
  	this.b = b;
  
  	this.plus = function (point) {
    	var self = this;
      	self.a = self.a + point.a;
      	self.b = self.b + point.b;
      return this;
    }
}

console.log(new Point(1, 2).plus(new Point(2, 1)))
// â†’ Point{x: 3, y: 3}


////////////////////// CLASS //////////////////////////////////////////
class Speaker {  
  constructor(name, verb){
    this.name = name
    this.verb = verb || "says"
  }  
  
  speak(text){
  	console.log(this.name + " " + this.verb + " '" + text + "'")
  }
}

class Shouter extends Speaker {
  constructor(name){
    super(name)
  } 
  
  speak(text){
  	super.speak(text.toUpperCase());
  }
}


new Shouter("Dr. Loudmouth").speak("hello there")

////////////////////// PROTOTYPE //////////////////////////////////////////
function Speaker(name, verb) {
  this.name = name
  this.verb = verb || "says"
}
Speaker.prototype.speak = function(text) {
  console.log(this.name + " " + this.verb + " '" + text + "'")
}

function Shouter(name) {
  Speaker.call(this, name, "shouts")
}
Shouter.prototype = Object.create(Speaker.prototype)
Shouter.prototype.speak = function(text) {
  Speaker.prototype.speak.call(this, text.toUpperCase())
}

new Shouter("Dr. Loudmouth").speak("hello there")

